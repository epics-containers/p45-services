blueapi:
  hostNetwork: true
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 500m
      memory: 100Mi
  nodeSelector:
    kubernetes.io/hostname: p45-control.diamond.ac.uk
  tolerations:
    - key: nodetype
      operator: Equal
      value: test-rig
      effect: NoSchedule
    - key: beamline
      operator: Equal
      value: bl45p
      effect: NoSchedule
  service:
    type: LoadBalancer # TODO: when DNS entry created expose only as ClusterIP
  ingress:
    create: false
    host: p45-blueapi.diamond.ac.uk  # TODO: Get DNS entry created
  extraEnvVars: |
    - name: SCRATCH_AREA
      value: {{ .Values.scratch.containerPath }}
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: rabbitmq-password
          key: rabbitmq-password
  worker:
    env:
      sources:
      - kind: dodal
        module: dodal.beamlines.p45
        # TODO: Make p45 plans repository
      - kind: planFunctions
        module: dls_bluesky_core.plans
      - kind: planFunctions
        module: dls_bluesky_core.stubs
      events:
        broadcast_status_events: False
    stomp:
      auth:
        username: p45
        passcode: ${RABBITMQ_PASSWORD}
      host: p45-rabbitmq-daq.diamond.ac.uk
  scratch:
    hostPath: /dls_sw/p45/software/blueapi/scratch
    containerPath: /dls_sw/p45/software/blueapi/scratch
